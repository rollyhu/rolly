package main

import (
	"fmt"
)

func merge(intervals [][]int) [][]int {
	reslut := [][]int{}
	tt := 1
	ff:
	for i := 0; i < len(intervals); {
		temp := make([]int, 2)
		temp[0] = intervals[i][0]
		fmt.Println("i:=", i)
		if i+1 < len(intervals) && intervals[i][1] >= intervals[i+1][0]  {
			tt1 := 1
			for j := i+1; j < len(intervals); j++ {
				if j+1== len(intervals){
					temp[1] = intervals[j+tt1-1][1]
					reslut = append(reslut, temp)
					break ff
				}else if j+1 <= len(intervals) && intervals[j][1] < intervals[j+tt1][0] {
					fmt.Println("tiao....")
					temp[1] = intervals[j][1]
					tt++
					break
				} else if j+2 <= len(intervals) && intervals[j+tt1][1] >= intervals[j+tt1+1][0] {
					tt1++
				} else if j+2 >= len(intervals) {
					temp[1] = intervals[j+tt1][1]
					break
				}
			}
			reslut = append(reslut, temp)
		} else if i+1 < len(intervals) && intervals[i][1] < intervals[i+1][0] {
			temp[1] = intervals[i][1]
			reslut = append(reslut, temp)
			tt = 1
		} else if i == len(intervals)-1 {
			temp[1] = intervals[i][1]
			reslut = append(reslut, temp)
		}
		i = i + tt
		fmt.Println("temp:",temp)
	}
	
	fmt.Println(reslut)
	return reslut
}

func main() {

	nums := [][]int{{1, 4}, {4, 5}}
	// nums := [][]int{{1, 3}, {2, 6},{8, 10},{15, 18}}
	merge(nums)
	// fmt.Print(nums)

}
